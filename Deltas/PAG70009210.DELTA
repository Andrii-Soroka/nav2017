OBJECT Page 70009210 G/L Source Name Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=12.12.16;
    Time=12:00:00;
    Version List=GLSN10.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=G/L Source Name Setup;
    SourceTable=Table70009201;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 Setup@1000 : Record 70009201;
                 PermissionMgt@1000000000 : Codeunit 70009216;
               BEGIN
                 INIT;
                 IF NOT Setup.GET THEN BEGIN
                   Setup.INIT;
                   Setup.INSERT;
                 END;
                 TRANSFERFIELDS(Setup);
                 INSERT;

                 PermissionMgt.GetAccessControl(TempUserAccess,TempGroupAccess);
                 CurrPage.GroupsWithReadAccess.PAGE.Set(TempGroupAccess,TempUserAccess);
                 CurrPage.GroupsWithUpdateAccess.PAGE.Set(TempGroupAccess,TempUserAccess);
                 CurrPage.UsersWithReadAccess.PAGE.Set(TempUserAccess);
                 CurrPage.UsersWithUpdateAccess.PAGE.Set(TempUserAccess);

                 Step := Step::Start;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.GetStatus(PAGE::"G/L Source Name Setup Wizard") = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 CASE Step OF
                                   Step::Registration:
                                     IF "Registration E-Mail Address" = '' THEN
                                       ERROR(RegistrationEMailAddressMissingErr);
                                 END;

                                 NextStep(FALSE);
                               END;
                                }
      { 70009200;1   ;Action    ;
                      Name=ActionDefault;
                      CaptionML=ENU=Set Defaults;
                      ToolTipML=ENU=Updates Permissions to all users and user groups as suggested;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FirstStepVisible;
                      InFooterBar=Yes;
                      Image=Default;
                      OnAction=VAR
                                 CompanyInformation@70009201 : Record 79;
                                 PermissionMgt@70009200 : Codeunit 70009216;
                               BEGIN
                                 PermissionMgt.SuggestAccessControl(TempUserAccess,TempGroupAccess);
                                 IF "Registration E-Mail Address" = '' THEN
                                   IF CompanyInformation.GET THEN
                                     "Registration E-Mail Address" := CompanyInformation."E-Mail";

                                 IF "Registration E-Mail Address" = '' THEN
                                   Step := Step::Registration
                                 ELSE
                                   Step := Step::Finish;
                                 EnableControls;
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      Name=ActionUpdateSourceLookup;
                      CaptionML=ENU=Update G/L Source Names;
                      ToolTipML=ENU=This action will update the G/L Source Names lookup table;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Card;
                      OnAction=VAR
                                 GLSourceNameMgt@1000000000 : Codeunit 70009201;
                               BEGIN
                                 GLSourceNameMgt.Refresh(FALSE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaRepositoryStandard.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaRepositoryDone.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 20  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                CaptionML=ENU=Welcome to G/L Source Name Setup;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=To be able to use Source Names on G/L Entries, users must have required permissions. }

    { 19  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU="Users that can update master tables, like; Customer, Vendor, Bank Account and Fixed Asset, must be able to update the G/L Source Name lookup table."] }

    { 21  ;2   ;Group     ;
                CaptionML=ENU=Let's go!;
                GroupType=Group }

    { 70009201;3;Group    ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Set Defaults and all required permissions will be automatically assigned to user group members and users based on current permissions to the G/L Entries and the above master tables. }

    { 22  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next so you can manually set up permissions for users and groups. }

    { 2   ;1   ;Group     ;
                Visible=UserGroupReadVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change read permission for the user group members }

    { 1000000000;2;Part   ;
                Name=GroupsWithReadAccess;
                CaptionML=ENU=User Groups requiring read access;
                SubPageView=WHERE(Permission Level=CONST(Read));
                PagePartID=Page70009204;
                PartType=Page }

    { 1000000002;1;Group  ;
                Visible=UserGroupUpdateVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change both read and update permission for the user group members }

    { 1000000001;2;Part   ;
                Name=GroupsWithUpdateAccess;
                CaptionML=ENU=User Groups requiring update access;
                SubPageView=WHERE(Permission Level=CONST(Update));
                PagePartID=Page70009204;
                PartType=Page }

    { 1000000007;1;Group  ;
                Visible=UserReadVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change read permission for the user.  User Group members should be managed through the user group only. }

    { 1000000006;2;Part   ;
                Name=UsersWithReadAccess;
                CaptionML=ENU=Users requiring read access;
                SubPageView=WHERE(Permission Level=CONST(Read));
                PagePartID=Page70009203;
                PartType=Page }

    { 1000000005;1;Group  ;
                Visible=UserUpdateVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change both read and update permission for the user.  User Group members should be managed through the user group only }

    { 1000000004;2;Part   ;
                Name=UsersWithUpdateAccess;
                CaptionML=ENU=Users requiring update access;
                SubPageView=WHERE(Permission Level=CONST(Update));
                PagePartID=Page70009203;
                PartType=Page }

    { 12  ;1   ;Group     ;
                Visible=RegistrationVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the Registration details. }

    { 1000000003;3;Field  ;
                ToolTipML=ENU=Your registration will only be stored in Dynamics365.  Your E-Mail Address is not shared with anyone.;
                SourceExpr="Registration E-Mail Address" }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 70009203;2;Group    ;
                GroupType=Group;
                InstructionalTextML=ENU=We suggest that you refresh the data in G/L Source Names lookup table before finishing this wizard.  You can come back here any time to refresh the lookup table again }

    { 24  ;2   ;Group     ;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 23  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=To refresh the data in the G/L Source Name lookup table, choose Update G/L Source Names. }

    { 25  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=To enable Source Names in G/L Entries, choose Finish. }

  }
  CODE
  {
    VAR
      AssistedSetup@1005 : Record 1803;
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      TempUserAccess@1000000001 : TEMPORARY Record 70009203;
      TempGroupAccess@1000000000 : TEMPORARY Record 70009204;
      Step@1012 : 'Start,UserGroupRead,UserGroupUpdate,UserRead,UserUpdate,Registration,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      UserGroupReadVisible@1010 : Boolean;
      UserGroupUpdateVisible@1011 : Boolean;
      UserReadVisible@1003 : Boolean;
      UserUpdateVisible@1002 : Boolean;
      RegistrationVisible@1000000002 : Boolean;
      FinalStepVisible@1015 : Boolean;
      UserGroupReadEnabled@1000000007 : Boolean;
      UserGroupUpdateEnabled@1000000006 : Boolean;
      UserReadEnabled@1000000005 : Boolean;
      UserUpdateEnabled@1000000004 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=G/L Source Names have not been set up.\\Are you sure you want to exit?';
      RegistrationEMailAddressMissingErr@1000000003 : TextConst 'ENU=Registration E-Mail Address is missing';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::UserGroupRead:
          ShowUserGroupReadStep;
        Step::UserGroupUpdate:
          ShowUserGroupUpdateStup;
        Step::UserRead:
          ShowUserReadStep;
        Step::UserUpdate:
          ShowUserUpdateSetup;
        Step::Registration:
          ShowRegistrationStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      StoreSetup;
      StoreAccessControl;
      AssistedSetup.SetStatus(PAGE::"G/L Source Name Setup Wizard",AssistedSetup.Status::Completed);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN BEGIN
        Step := Step - 1;
        IF NOT StepEnabled THEN
          NextStep(Backwards);
      END ELSE BEGIN
        Step := Step + 1;
        IF NOT StepEnabled THEN
          NextStep(Backwards);
      END;

      EnableControls;
    END;

    LOCAL PROCEDURE StepEnabled@1000000007() : Boolean;
    BEGIN
      CASE Step OF
        Step::Start:
          EXIT(TRUE);
        Step::UserGroupRead:
          EXIT(UserGroupReadEnabled);
        Step::UserGroupUpdate:
          EXIT(UserGroupUpdateEnabled);
        Step::UserRead:
          EXIT(UserReadEnabled);
        Step::UserUpdate:
          EXIT(UserUpdateEnabled);
        Step::Registration:
          EXIT(TRUE);
        Step::Finish:
          EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowUserGroupReadStep@1000000000();
    BEGIN
      UserGroupReadVisible := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowUserGroupUpdateStup@1000000001();
    BEGIN
      UserGroupUpdateVisible := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowUserReadStep@1000000002();
    BEGIN
      UserReadVisible := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowUserUpdateSetup@1000000003();
    BEGIN
      UserUpdateVisible := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowRegistrationStep@1000000006();
    BEGIN
      RegistrationVisible := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := "Registration E-Mail Address" <> '';
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      UserGroupReadVisible := FALSE;
      UserGroupUpdateVisible := FALSE;
      UserReadVisible := FALSE;
      UserUpdateVisible := FALSE;
      RegistrationVisible := FALSE;
      FinalStepVisible := FALSE;

      WITH TempUserAccess DO BEGIN
        SETRANGE("Permission Level","Permission Level"::Read);
        UserReadEnabled := NOT ISEMPTY;
        SETRANGE("Permission Level","Permission Level"::Update);
        UserUpdateEnabled := NOT ISEMPTY;
        SETRANGE("Permission Level");
      END;

      WITH TempGroupAccess DO BEGIN
        SETRANGE("Permission Level","Permission Level"::Read);
        UserGroupReadEnabled := NOT ISEMPTY;
        SETRANGE("Permission Level","Permission Level"::Update);
        UserGroupUpdateEnabled := NOT ISEMPTY;
        SETRANGE("Permission Level");
      END;
    END;

    LOCAL PROCEDURE StoreSetup@1000000004();
    VAR
      Setup@1000000000 : Record 70009201;
    BEGIN
      Setup.GET;
      Setup.TRANSFERFIELDS(Rec);
      Setup.Status := Setup.Status::Completed;
      Setup.MODIFY;
    END;

    LOCAL PROCEDURE StoreAccessControl@1000000005();
    VAR
      PermissionMgt@1000000000 : Codeunit 70009216;
    BEGIN
      PermissionMgt.SetAccessControl(TempUserAccess,TempGroupAccess);
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      THEN
        TopBannerVisible := MediaRepositoryDone.Image.HASVALUE;
    END;

    BEGIN
    END.
  }
}

