OBJECT Codeunit 70009200 G/L Source Name App Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=02.05.17;
    Time=19:04:13;
    Version List=GLSN10.0.0.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PermissionSetToSetupGLSourceNames@70009200 : TextConst 'ENU=G/L-SOURCE NAMES, S';
      PermissionSetToUpdateGLSourceNames@70009201 : TextConst 'ENU=G/L-SOURCE NAMES, E';
      PermissionSetToUserGLSourceNames@70009202 : TextConst 'ENU=G/L-SOURCE NAMES';

    PROCEDURE GetAppId@1000000000() : Text;
    BEGIN
      EXIT('479e77f3-031a-49fe-bb6a-314464c6a9a8');
    END;

    PROCEDURE OnNavAppUpgradePerDatabase@1();
    VAR
      AccessControl@70009200 : Record 2000000053;
    BEGIN
      WITH AccessControl DO BEGIN
        SETFILTER("Role ID",'%1|%2','SUPER','SECURITY');
        IF FINDSET THEN REPEAT
          AddUserAccess("User Security ID",PermissionSetToUserGLSourceNames);
          AddUserAccess("User Security ID",PermissionSetToUpdateGLSourceNames);
          AddUserAccess("User Security ID",PermissionSetToSetupGLSourceNames);
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE OnNavAppUpgradePerCompany@2();
    VAR
      GLSourceNameMgt@70009200 : Codeunit 70009201;
    BEGIN
      NAVAPP.RESTOREARCHIVEDATA(DATABASE::"G/L Source Name Setup");
      NAVAPP.RESTOREARCHIVEDATA(DATABASE::"G/L Source Name User Setup");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"G/L Source Name");

      NAVAPP.DELETEARCHIVEDATA(DATABASE::"G/L Source Name Help Resource");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"G/L Source Name User Access");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"G/L Source Name Group Access");

      GLSourceNameMgt.PopulateSourceTable;
      RemoveAssistedSetup;
    END;

    LOCAL PROCEDURE RemoveAssistedSetup@1000000001();
    VAR
      AssistedSetup@1000000000 : Record 1803;
    BEGIN
      WITH AssistedSetup DO BEGIN
        SETRANGE("Page ID",PAGE::"G/L Source Name Setup Wizard");
        IF NOT ISEMPTY THEN
          DELETEALL;
      END;
    END;

    LOCAL PROCEDURE AddUserAccess@1000000010(AssignToUser@70009201 : GUID;PermissionSet@70009200 : Code[20]);
    VAR
      AccessControl@1000000002 : Record 2000000053;
      AppGuid@1000000004 : GUID;
    BEGIN
      EVALUATE(AppGuid,GetAppId);
      WITH AccessControl DO BEGIN
        INIT;
        "User Security ID" := AssignToUser;
        "App ID" := AppGuid;
        Scope := Scope::Tenant;
        "Role ID" := PermissionSet;
        IF NOT FIND THEN
          INSERT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

